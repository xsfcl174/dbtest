<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fancl.db.mybatis.dao.SysFunctionDao">
  <resultMap id="BaseResultMap" type="com.fancl.db.mybatis.bean.SysFunction">
    <id column="FN_ID" jdbcType="INTEGER" property="fnId" />
    <result column="FN_SHORT_NAME" jdbcType="VARCHAR" property="fnShortName" />
    <result column="FN_NAME" jdbcType="VARCHAR" property="fnName" />
    <result column="FN_URL" jdbcType="VARCHAR" property="fnUrl" />
    <result column="FN_PARENT_ID" jdbcType="INTEGER" property="fnParentId" />
    <result column="FN_IS_LEAF" jdbcType="SMALLINT" property="fnIsLeaf" />
    <result column="FN_TREE_LAYER" jdbcType="VARCHAR" property="fnTreeLayer" />
    <result column="FN_REVERSE1" jdbcType="VARCHAR" property="fnReverse1" />
    <result column="FN_REVERSE2" jdbcType="VARCHAR" property="fnReverse2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="fields == null">
      FN_ID, FN_SHORT_NAME, FN_NAME, FN_URL, FN_PARENT_ID, FN_IS_LEAF, FN_TREE_LAYER, FN_REVERSE1, 
      FN_REVERSE2
    </if>
    <if test="fields != null">
      ${fields}
    </if>
  </sql>
  <select id="selectByCriteria" parameterType="com.fancl.db.mybatis.bean.SysFunctionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    FN_ID,FN_SHORT_NAME,FN_NAME,FN_URL,FN_PARENT_ID,FN_IS_LEAF,FN_TREE_LAYER,FN_REVERSE1,FN_REVERSE2
    from sys_function
    where FN_ID = #{fnId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_function
    where FN_ID = #{fnId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.fancl.db.mybatis.bean.SysFunctionCriteria">
    delete from sys_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fancl.db.mybatis.bean.SysFunction">
    insert into sys_function (FN_ID, FN_SHORT_NAME, FN_NAME, 
      FN_URL, FN_PARENT_ID, FN_IS_LEAF, 
      FN_TREE_LAYER, FN_REVERSE1, FN_REVERSE2
      )
    values (#{fnId,jdbcType=INTEGER}, #{fnShortName,jdbcType=VARCHAR}, #{fnName,jdbcType=VARCHAR}, 
      #{fnUrl,jdbcType=VARCHAR}, #{fnParentId,jdbcType=INTEGER}, #{fnIsLeaf,jdbcType=SMALLINT}, 
      #{fnTreeLayer,jdbcType=VARCHAR}, #{fnReverse1,jdbcType=VARCHAR}, #{fnReverse2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fancl.db.mybatis.bean.SysFunction">
    insert into sys_function
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fnId != null">
        FN_ID,
      </if>
      <if test="fnShortName != null">
        FN_SHORT_NAME,
      </if>
      <if test="fnName != null">
        FN_NAME,
      </if>
      <if test="fnUrl != null">
        FN_URL,
      </if>
      <if test="fnParentId != null">
        FN_PARENT_ID,
      </if>
      <if test="fnIsLeaf != null">
        FN_IS_LEAF,
      </if>
      <if test="fnTreeLayer != null">
        FN_TREE_LAYER,
      </if>
      <if test="fnReverse1 != null">
        FN_REVERSE1,
      </if>
      <if test="fnReverse2 != null">
        FN_REVERSE2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fnId != null">
        #{fnId,jdbcType=INTEGER},
      </if>
      <if test="fnShortName != null">
        #{fnShortName,jdbcType=VARCHAR},
      </if>
      <if test="fnName != null">
        #{fnName,jdbcType=VARCHAR},
      </if>
      <if test="fnUrl != null">
        #{fnUrl,jdbcType=VARCHAR},
      </if>
      <if test="fnParentId != null">
        #{fnParentId,jdbcType=INTEGER},
      </if>
      <if test="fnIsLeaf != null">
        #{fnIsLeaf,jdbcType=SMALLINT},
      </if>
      <if test="fnTreeLayer != null">
        #{fnTreeLayer,jdbcType=VARCHAR},
      </if>
      <if test="fnReverse1 != null">
        #{fnReverse1,jdbcType=VARCHAR},
      </if>
      <if test="fnReverse2 != null">
        #{fnReverse2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByCriteria" parameterType="com.fancl.db.mybatis.bean.SysFunctionCriteria" resultType="java.lang.Long">
    select count(*) from sys_function
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map">
    update sys_function
    <set>
      <if test="record.fnId != null">
        FN_ID = #{record.fnId,jdbcType=INTEGER},
      </if>
      <if test="record.fnShortName != null">
        FN_SHORT_NAME = #{record.fnShortName,jdbcType=VARCHAR},
      </if>
      <if test="record.fnName != null">
        FN_NAME = #{record.fnName,jdbcType=VARCHAR},
      </if>
      <if test="record.fnUrl != null">
        FN_URL = #{record.fnUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fnParentId != null">
        FN_PARENT_ID = #{record.fnParentId,jdbcType=INTEGER},
      </if>
      <if test="record.fnIsLeaf != null">
        FN_IS_LEAF = #{record.fnIsLeaf,jdbcType=SMALLINT},
      </if>
      <if test="record.fnTreeLayer != null">
        FN_TREE_LAYER = #{record.fnTreeLayer,jdbcType=VARCHAR},
      </if>
      <if test="record.fnReverse1 != null">
        FN_REVERSE1 = #{record.fnReverse1,jdbcType=VARCHAR},
      </if>
      <if test="record.fnReverse2 != null">
        FN_REVERSE2 = #{record.fnReverse2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map">
    update sys_function
    set FN_ID = #{record.fnId,jdbcType=INTEGER},
      FN_SHORT_NAME = #{record.fnShortName,jdbcType=VARCHAR},
      FN_NAME = #{record.fnName,jdbcType=VARCHAR},
      FN_URL = #{record.fnUrl,jdbcType=VARCHAR},
      FN_PARENT_ID = #{record.fnParentId,jdbcType=INTEGER},
      FN_IS_LEAF = #{record.fnIsLeaf,jdbcType=SMALLINT},
      FN_TREE_LAYER = #{record.fnTreeLayer,jdbcType=VARCHAR},
      FN_REVERSE1 = #{record.fnReverse1,jdbcType=VARCHAR},
      FN_REVERSE2 = #{record.fnReverse2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fancl.db.mybatis.bean.SysFunction">
    update sys_function
    <set>
      <if test="fnShortName != null">
        FN_SHORT_NAME = #{fnShortName,jdbcType=VARCHAR},
      </if>
      <if test="fnName != null">
        FN_NAME = #{fnName,jdbcType=VARCHAR},
      </if>
      <if test="fnUrl != null">
        FN_URL = #{fnUrl,jdbcType=VARCHAR},
      </if>
      <if test="fnParentId != null">
        FN_PARENT_ID = #{fnParentId,jdbcType=INTEGER},
      </if>
      <if test="fnIsLeaf != null">
        FN_IS_LEAF = #{fnIsLeaf,jdbcType=SMALLINT},
      </if>
      <if test="fnTreeLayer != null">
        FN_TREE_LAYER = #{fnTreeLayer,jdbcType=VARCHAR},
      </if>
      <if test="fnReverse1 != null">
        FN_REVERSE1 = #{fnReverse1,jdbcType=VARCHAR},
      </if>
      <if test="fnReverse2 != null">
        FN_REVERSE2 = #{fnReverse2,jdbcType=VARCHAR},
      </if>
    </set>
    where FN_ID = #{fnId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fancl.db.mybatis.bean.SysFunction">
    update sys_function
    set FN_SHORT_NAME = #{fnShortName,jdbcType=VARCHAR},
      FN_NAME = #{fnName,jdbcType=VARCHAR},
      FN_URL = #{fnUrl,jdbcType=VARCHAR},
      FN_PARENT_ID = #{fnParentId,jdbcType=INTEGER},
      FN_IS_LEAF = #{fnIsLeaf,jdbcType=SMALLINT},
      FN_TREE_LAYER = #{fnTreeLayer,jdbcType=VARCHAR},
      FN_REVERSE1 = #{fnReverse1,jdbcType=VARCHAR},
      FN_REVERSE2 = #{fnReverse2,jdbcType=VARCHAR}
    where FN_ID = #{fnId,jdbcType=INTEGER}
  </update>
</mapper>